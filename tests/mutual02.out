tests/mutual02.types:5:1-5:16:
  Normalised:
    μ Delay. ∀ (ρ : Row).
      < Now? :
          ∃ (ρ : Row).
            { head : Int
            , tail :
                μ Stream. ∀ (ρ : Row).
                  <Yield? : Delay | Skip? : Stream | EndOfStream? : Unit | … ρ>
            , … ρ
            }
      | Later? : Delay
      | … ρ
      >
  Kind:
    Type
tests/mutual02.types:7:1-7:17:
  Normalised:
    μ Stream. ∀ (ρ : Row).
      < Yield? :
          μ Delay. ∀ (ρ : Row).
            < Now? : ∃ (ρ : Row). {head : Int, tail : Stream, … ρ}
            | Later? : Delay
            | … ρ
            >
      | Skip? : Stream
      | EndOfStream? : Unit
      | … ρ
      >
  Kind:
    Type
tests/mutual02.types:9:1-9:82:
  Subtype:
    μ Delay. ∀ (ρ : Row).
      < Now? :
          ∃ (ρ : Row).
            { head : Int
            , tail :
                μ Stream. ∀ (ρ : Row).
                  <Yield? : Delay | Skip? : Stream | EndOfStream? : Unit | … ρ>
            , … ρ
            }
      | Later? : Delay
      | … ρ
      >
  Supertype:
    ∀ (ρ : Row).
      < Later? :
          μ Delay. ∀ (ρ : Row).
            < Now? :
                ∃ (ρ : Row).
                  { head : Int
                  , tail :
                      μ Stream. ∀ (ρ : Row).
                        < Yield? : Delay
                        | Skip? : Stream
                        | EndOfStream? : Unit
                        | … ρ
                        >
                  , … ρ
                  }
            | Later? : Delay
            | … ρ
            >
      | Now? :
          ∃ (ρ : Row).
            { head : Int
            , tail :
                μ Stream. ∀ (ρ : Row).
                  < Yield? :
                      μ Delay. ∀ (ρ : Row).
                        < Now? : ∃ (ρ : Row). {head : Int, tail : Stream, … ρ}
                        | Later? : Delay
                        | … ρ
                        >
                  | Skip? : Stream
                  | EndOfStream? : Unit
                  | … ρ
                  >
            , … ρ
            }
      | … ρ
      >
  Result:
    OK